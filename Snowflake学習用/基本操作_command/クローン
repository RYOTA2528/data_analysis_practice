// クローン(Zero\copy clone)の作成
Snowflakeにおける クローン（Clone） は、テーブルやスキーマ、データベースなどのオブジェクトを高速・軽量にコピーする機能です。以下にその特徴をわかりやすくまとめます。

🔍 クローンの主な特徴
特徴	説明
🔄 ゼロコピー	実データは複製せず、元のデータへの参照で構成される（Copy-on-write方式）
⚡ 即時作成・高速	数TBのテーブルでも数秒で作成可能
💾 ストレージ節約	元データと差分だけを保持するため、非常にストレージ効率が良い
🔧 読み書き可能	クローンは独立したオブジェクトとして操作でき、変更もできる
⏳ 過去時点のクローンも可	AT (TIMESTAMP) でTime Travel機能と連携して過去の状態から作成できる
🛑 外部ステージやパイプは不可	一部のオブジェクト（外部ステージ、パイプなど）はクローンできない


 クローンの用途例
用途	説明
✅ テスト・検証環境の作成	本番テーブルやスキーマをクローンして、安全に検証できる
✅ データ比較（A/B）	変更前後のデータを比較するためのコピーを簡単に用意できる
✅ バックアップの一形態	特定時点のスナップショットとして活用
✅ Time Travelと連携したリカバリ	過去の状態からの復元にも利用可能


---実践---
--クローンテーブルを作成
CREATE TABLE OUR_FIRST_DB.PUBLIC.CUSTOMERS_CLONE --コピー先
CLONE OUR_FIRST_DB.PUBLIC.CUSTOMERS; --コピー元

--実際にクローン下テーブルの更新(元テーブルへの影響はなし)
UPDATE OUR_FIRST_DB.PUBLIC.CUSTOMERS_CLONE SET LAST_NAME = NULL WHERE id = 1;


--（補足）--
① テンポラリーテーブルをクローンしてパーマネントにすることはできない
（トランジットは可能）


---実践---
--スキーマをクローンする
CREATE TRANSIENT SCEMA OUR_FIRST_DB.COPIED_SCHEMA
CLONE OUR_FIRST_DB.PUBLIC;


--（補足）--
①別のデータベースにスキーマをクローンすることも可能
②スキーマ配下のステージも正しくクローンされる



---実践---
--タイムトラベルと組み合わせて効率的にクローン
CREATE OR REPLACE TABLE OUR_FIRST_DB.public.time_travel (
  id int,
  first_name string,
  last_name string
)

CREATE OR REPLACE FILE FORMAT MANAGE_DB.file_formats.csv_file
  type = csv
  field_delimiter = ','
  skip_header = 1;

CREATE OR REPLACE  STAGE MANAGE_DB.external_stages.time_travel_stage
  URL = 's3//data-snowflake-fundamentals/time-travel'
  file_format = MANAGE_DB.file_formats.csv_file;

LIST @MANAGE_DB.external_stages.time_travel_stage;

COPY INTO OUR_FIRST_DB.public.time_travel
from @MANAGE_DB.external_stages.time_travel_stage
files = ('customers.csv');

--上記のテーブルにわざと誤update実行
UPDATE OUR_FIRST_DB.public.time_travel
SET FIRST_NAME = 'Frank';

--１分前のクエリ結果を確認
SELECT * FROM OUR_FIRST_DB.public.time_travel as (OFFSET => -60*1);7

-- タイムトラベルかつクローンで戻す
CREATE OR REPLACE TABLE OUR_FIRST_DB.public.time_travel_clone
CLONE OUR_FIRST_DB.public.time_travel at (OFFSET => -60*1);






