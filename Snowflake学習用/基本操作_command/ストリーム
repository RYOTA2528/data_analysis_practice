//ストリーム処理
CREATE OR REPLACE TRANSIENT DATABASE STREAMS_DB;

--商品生データ
create or replace table sales_raw_staging(
  id varchar,
  product varchar,
  price varchar,
  amount varchar,
  store_id varchar
);

insert into sales_raw_staging()
    values
        (1,'Banana',1.99.1,1),
        (2,'Lemon',0.99.1,1),
        (3,'Apple',1.79.1,2),
        (4,'Orange Juice',1.89.1,2),
        (4,'Cereals',5.98.2,1);

--店舗情報
create or replace table store_table(
  store_id number,
  location varchar,
  employees number
);

INSERT INTO STORE_TABLE VALUES(1, 'Chicago', 33); 
INSERT INTO STORE_TABLE VALUES(2, 'London', 12); 

--最終売上
create or replace table sales_final_table(
  id int,
  product varchar,
  price number,
  amount int,
  store_id int,
  location varchar,
  employees int
);

INSERT INTO sales_final_table
    SELECT
    SA.id,
    SA.product,
    SA.price,
    SA.amount,
    SA.amount,
    ST.STORE_ID,
    ST.LOCATION,
    ST.EMPLOYEES,
    FROM SALES_RAW_STAGING SA
    JOIN STIRE_TABLE_STAGING ST 
    ON ST.STORE_ID=SA.STORE_ID;

--本題：Streamオブジェクトの作成
create or replace stream sales_stream on table sales_raw_staging;

SHOW STREAMS;

DESC STREAM sales_stream;

--実際に元テーブルに変更を加えてみる
INSERT INTO sales_raw_staging values(6,'Mango',1.99,1,2),(7,'Garlic',0.99,1,1);

--ストリームを確認（２つ表示されるはず）
select * from sales_stream;

--ストリームの変更を加えてみる
INSERT INTO sales_final_table
    SELECT
    SA.id,
    SA.product,
    SA.price,
    SA.amount,
    SA.amount,
    ST.STORE_ID,
    ST.LOCATION,
    ST.EMPLOYEES,
    FROM SALES_STREAM SA
    JOIN STIRE_TABLE_STAGING ST 
    ON ST.STORE_ID=SA.STORE_ID;

-- ストリームを確認（0表示されるはず）
select * from sales_stream;


---実践---
--updateの結果が自動で反映されるようにしたい
SELECT * FROM SALES_RAW_STAGING;

SELECT * FROM SALES_STREAM;

UPDATE SALES_RAW_STAGING
SET PRODUCT = 'Potato' WHERE PRODUCT = 'Banana';

--実際に自動で反映するために作成したstreamとfinalテーブルをmerge
merge into SALES_FINAL_TABLE F
using SALES_STREM S
  on f.id = s.id
when matched
    and S.METADATA$ACTION = 'INSERT' --これはUPDATE後の変更箇所が「METADATA$ACTION=INSERT」表示されるため
    and S.METADATA$ISUPDATE = 'TRUE' --これはUPDATE後の変更箇所が「METADATA$ISUPDATE=TRUE」と表示されるため
    then update
    set f.product = s.product,
        f.price = s.price, 
        f.amount = s.amount
        f.store_id = s.tore_id;

SELECT * FROM SALES_FINAL_TABLE;

SELECT * FROM SALES_RAW_STAGING;

SELECT * FROM SALES_STREAM;

--この更新を実行し再度上記mergeを実行すれば最終テーブルの結果に反映されるようになる
UPDATE SALES_RAW_STAGING
SET PRODUCT = 'Pain' WHERE PRODUCT = 'Potato';

--------------------------------------------------------
--------------------------------------------------------

---実践---
-- ストリームのオフセット（保持期間）を試す

//ストリーム処理
CREATE OR REPLACE TRANSIENT DATABASE STREAMS_DB_OFFSET;

--商品生データ
create or replace table sales_raw_staging(
  id varchar,
  product varchar,
  price varchar,
  amount varchar,
  store_id varchar
);

insert into sales_raw_staging()
    values
        (1,'Banana',1.99.1,1),
        (2,'Lemon',0.99.1,1),
        (3,'Apple',1.79.1,2),
        (4,'Orange Juice',1.89.1,2),
        (4,'Cereals',5.98.2,1);


--店舗情報
create or replace table store_table(
  store_id number,
  location varchar,
  employees number
);

INSERT INTO STORE_TABLE VALUES(1, 'Chicago', 33); 
INSERT INTO STORE_TABLE VALUES(2, 'London', 12); 

--最終売上
create or replace table sales_final_table(
  id int,
  product varchar,
  price number,
  amount int,
  store_id int,
  location varchar,
  employees int
);

INSERT INTO sales_final_table
    SELECT
    SA.id,
    SA.product,
    SA.price,
    SA.amount,
    SA.amount,
    ST.STORE_ID,
    ST.LOCATION,
    ST.EMPLOYEES,
    FROM SALES_RAW_STAGING SA
    JOIN STIRE_TABLE_STAGING ST 
    ON ST.STORE_ID=SA.STORE_ID;

create or replace stream sales_stream on table sales_raw_staging;

SHOW STREAMS;

DESC STREAM sales_stream;

--実際に元テーブルに変更を加えてみる
INSERT INTO sales_raw_staging values(6,'Mango',1.99,1,2),(7,'Garlic',0.99,1,1);

--ストリームを確認（２つ表示されるはず）
select * from sales_stream;

-- show parametersでstreamの保持期間を確認する(defult:14日間)
SHOW PARAMETERIS IN TABLE sales_raw_staging;

ALTER TABLE sales_raw_staging SET MAX_DATA_EXTENSION_TIME_IN_DAYS = 14;

--------------------------------------------------------
--------------------------------------------------------

---実践---
-- 挿入・更新・削除のすべての操作をケースごとに分けて処理
merge into SALES_FINAL_TABLE F
USING ( SELECT STRE.*,ST.location,ST.employees
        FROM SALES_STREAM STRE
        JOIN STIRE_TABLE ST
        ON STRE.store_id = ST.store_id
) S
ON F.id = S.id
when matched
    and S.METADATA$ACTION = 'DELETE'
    and S.METADATA$ISUPDATE = 'FALSE'
    then delete
when matched
    and S.METADATA$ACTION = 'INSERT'
    and S.MEATADATA$ISUPDATE = 'TRUE'
    then update
    set f.product = s.product,
        f.price = s.price,
        f.amount = s.amount,
        f.store_id =s.store_id
when not matched
    and S.MEATADATA$ACTION = 'INSERT'
    then insert
    (s.id.s.product,s.price,s.store_id,s.amount,s.employees,);

