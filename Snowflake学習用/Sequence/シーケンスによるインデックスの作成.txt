/*【シーケンスとは？】
SEQ_AUTHOR_UID という名前のシーケンスを作成するためのものです。シーケンスは、通常、データベース内で自動的に一意の番号を生成するために使用されます。特に、自動インクリメントするプライマリーキーや識別子（UID）などを生成する際に役立ちます。
*/

-- シーケンスは著者ID（AUTHOR_UID）用のシーケンスであることがわかります。
create sequence SEQ_AUTHOR_UID
    start = 1
    increment = 1
    ORDER --これが指定されていない場合、シーケンスの番号は順不同で生成
    comment = 'Use this to fill in AUTHOR_UID';
    
    
/*【使用例】
シーケンスを使用すると、次のようにデータベースで自動的に一意のIDを生成できます。
例えば、AUTHOR_UID を Authors テーブルに挿入する場合は、次のようにシーケンスを使って自動的にIDを挿入できます。
*/    
INSERT INTO Authors (AUTHOR_UID, FirstName, LastName)
VALUES (SEQ_AUTHOR_UID.NEXTVAL, 'John', 'Doe');



/*【NextVal 関数による使用方法】*/
// カウンター (シーケンス) を削除して再作成し、3 から開始するようにします
// 次に、他の著者レコードを著者テーブルに追加します
create or replace sequence library_card_catalog.public.seq_author_uid
start = 3 
increment = 1 
ORDER
comment = 'Use this to fill in the AUTHOR_UID every time you add a row';

// 数字を入力する代わりに nextval 関数を使用します。 
insert into author(author_uid,first_name, middle_name, last_name) 
values
(seq_author_uid.nextval, 'Laura', 'K','Egendorf')
,(seq_author_uid.nextval, 'Jan', '','Grover')
,(seq_author_uid.nextval, 'Jennifer', '','Clapp')
,(seq_author_uid.nextval, 'Kathleen', '','Petelinsek');

// 結果上記3番目から挿入される。以前、テーブルに最初の 2 行を追加したとき、行 UID として 1 と 2 をハードコードしました。今回は、.nextval 関数を使用して UID を追加します。これは、どの番号だったかを覚えておく必要がないため、将来的にはより適切に機能します。 

自動インクリメント プロパティの場合と同じように、テーブル定義の一部としてシーケンスを使用することもできます。その場合は、その列のデフォルト値をseq_author_uid.nextval()として定義できます。この場合は、最初からやり直したくなかったので、代わりに挿入ステートメントで関数を使用しました。 

