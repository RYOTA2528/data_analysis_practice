# install Nginx using Ansible
# Start and Enable Nginx
# Check the status of Nginx
# Collect host information
- name: Setup nginx server on myserver list (host group)
  hosts:
    - devservers
  #  - testservers  #※ここをコメントアウトしておけば開発のみにinstall可能
  become: True #plyabook実行時に権限エラーを防ぐため
  tasks:
    - name: Install the latest version of nginx
      command: amazon-linux-extras install nginx -y
      

    - name: Start nginx service
      service:
        name: nginx
        state: started
        
        

    - name: Enable nginx service #自動起動の有効化
      service:
        name: nginx
        enabled: yes
        
        

    - name: Get nginx Installed version #インストールしたNginxのversion取得
      command: nginx -v
      

    - name: Get status of nginx service #Nginxの状態取得取得
      command: systemctl status nginx

    - name: Create directory
      file:
        path: /home/ec2-user/filemodule
        state: directory

    - name: Create file
      file:
        path: /home/ec2-user/filemodule/filemodule.txt
        state: touch

   # - name: Ansible copy file to remote server
   #   copy:
   #     src: "/home/ec2-user/index.html" #コピー元(※マスターノードに作成済み)
   #     dest: "/usr/share/nginx/html/" #コピー先

   ## 開発環境だけにコピー実施する
     -name: Ansible copy file to remote server
      copy:
        content: | #改行込みで複数文字列を指定可能
          <!DOCTYPE html>
          <html>
          <head>
          <meta charset="UTF-8">
          </head>
          <body>
          <h1>このページはcopyモジュールでコピーしたページです！</h1>
          </body>
          </html>
        dest: "/usr/share/nginx/html/" #コピー先



### 上記設定が終わり次第hostファイルの修正し「hostファイル経由でのplaybookの実施」
#TeraTermでマスターノードへssh接続
↓
①sudo vim /etc/ansible/hosts
・・・
#Ex 1:・・・
[devservers]
18.181.250.245
3.112.21.90

[testservers]
18.183.250.63
35.78.92.193
・・・
      
↓
②playbookをマスターノードに作成(※上記までで作成した内容をそのまま転記)
vim install_nginx.yaml
↓
③ansible-playbook install_nginx.yaml -v (ansibleを実行する)→エラーになる
↓
④sshエージェントの起動が終了してしなってるため再起動
ssh-agent bash
↓
⑤sudo cp ec2-key.pem ~/.ssh/
↓
⑥ssh-add ~/.ssh/ec2-key.pem
↓
⑦再実行 ansible-playbook install_nginx.yaml -v


### 「インベントリファイル(作成済み)でのplaybookの実施」
①
rm install nginxでvim install_nginx.yamlでまた再度上書き
↓
cat inventory.txt
[devservers]
ansible-dev-target1 ansible_host=18.181.250.245 ansible connection=ssh ansible user=ec2-user # dev1ホストマシンへマスターノードからssh接続する
ansible-dev-target1 ansible_host=3.112.21.90 ansible connection=ssh ansible user=ec2-user
[testservers]
ansible-test-target1 ansible_host=18.183.129.63 ansible connection=ssh ansible user=ec2-user
ansible-test-target1 ansible_host=35.78.92.193 ansible connection=ssh ansible user=ec2-user
↓
②ansible-playbook -i inventory.txt install_nginx.yaml -v （これでインベントリファイル経由での実行）


### HTTPでローカルからターゲットリソースへ接続するためにはセキュリティーグループの設定変更が必要

#EC2上で確認すると、AMI(アミー)の複製で生成してるため、同じセキュリティーグループ。
セキュリティーグループで
インバウンドルール：ルールの編集、ルールの追加でhttpを追加し(0.0.0.0/0)
↓
※これでローカルからの接続が可能
