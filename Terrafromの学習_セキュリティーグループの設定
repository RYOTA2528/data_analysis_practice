#-------------------------------------------------------
# Web Security Group
#-------------------------------------------------------

# WebServer用のセキュリティーグループ
resource "aws_security_group" "web_sg" {
  name = "${var.project}-${var.environment}-web-sg"
  description = "webサーバー用のセキュリティーグループ"
  vpc_id = aws_vpc.vpc.id #別ファイルだとしても、同一ディレクトリであれば使用可能

  tags = {
    Name = "${var.project}-${var.environment}-web-sg"
    Project = var.project
    Env = var.environment
    Type = "public"
  }
}

# WebServer用のセキュリティーグループルール(インバウンド_HTTP)
resource "aws_security_group_rule" "web_in_http"{
  security_group_id = aws_security_group.web_sg.id
  type = "ingress"
  protocol = "tcp"
  from_port = 80
  to_port = 80
  cidr_blocks = ["0.0.0.0/0"]
}


# WebServer用のセキュリティーグループルール(インバウンド_HTTP)
resource "aws_security_group_rule" "web_in_http"{
  security_group_id = aws_security_group.web_sg.id
  type = "ingress"
  protocol = "tcp"
  from_port = 80
  to_port = 80
  cidr_blocks = ["0.0.0.0/0"]
}


# WebServer用のセキュリティーグループルール(インバウンド_HTTPS)
resource "aws_security_group_rule" "web_in_http"{
  security_group_id = aws_security_group.web_sg.id
  type = "ingress"
  protocol = "tcp"
  from_port = 443
  to_port = 443
  cidr_blocks = ["0.0.0.0/0"]
}


# WebServer用のセキュリティーグループルール(アウトバウンド_TCP3000)
 #Webサーバーが外部APIや他のサービスと通信する際に、ポート3000を使って通信を行いたい場合に有効
resource "aws_security_group_rule" "web_out_tcp3000"{
  security_group_id = aws_security_group.web_sg.id
  type = "egress"
  protocol = "tcp"
  from_port = 3000
  to_port = 3000
  cidr_blocks = ["0.0.0.0/0"]
}

#-------------------------------------------------------
# APP Security Group
#-------------------------------------------------------

# APPServer用のセキュリティーグループ
resource "aws_security_group" "app_sg" {
  name = "${var.project}-${var.environment}-web-sg"
  description = "APPサーバー用のセキュリティーグループ"
  vpc_id = aws_vpc.vpc.id #別ファイルだとしても、同一ディレクトリであれば使用可能

  tags = {
    Name = "${var.project}-${var.environment}-app-sg"
    Project = var.project
    Env = var.environment
    Type = "public"
  }
}

# APPServer用のセキュリティーグループルール
#(補足)WebServerからのIN:TCP3000、S3へのOUT:HTTP/HTTPS、MySQLへのOUT:TCP3306


#  APPServer用のセキュリティーグループルール(インバウンド_TCP3000)
resource "aws_security_group_rule" "app_in_tcp3000" {
  security_group_id = aws_security_group.app_sg.id
  type = "ingress"
  protocol = "tcp"
  from_port = 3000
  to_port = 3000
  source_security_group_id = aws_security_group.web_sg.id
}


#  APPServer用のセキュリティーグループルール(アウトバウンド_HTTP)
resource "aws_security_group_rule" "app_out_http" {
  security_group_id = aws_security_group.app_sg.id
  type = "egress"
  protocol = "tcp"
  from_port = 80
  to_port = 80
  prefix_list_ids = [ data.aws_prefix_list.s3_pl.id ] #プレフィックスの指定のため
}

# APPServer用のセキュリティーグループルール(アウトバウンド_HTTPS)
resource "aws_security_group_rule" "app_out_https" {
  security_group_id = aws_security_group.app_sg.id
  type = "egress"
  protocol = "tcp"
  from_port = 443
  to_port = 443
  prefix_list_ids = [ data.aws_prefix_list.s3_pl.id ] #プレフィックスの指定のため
}

# APPServer用のセキュリティーグループルール(アウトバウンド_TCP3306)
resource "aws_security_group_rule" "app_out_https" {
  security_group_id = aws_security_group.app_sg.id
  type = "egress"
  protocol = "tcp"
  from_port = 3306
  to_port = 3306
  source_security_group_id = aws_security_group.web_db.id
}

#-------------------------------------------------------
# 運用管理用 Server Security Group
#-------------------------------------------------------
#(補足)
 #踏み台サーバです。ネットワーク側のIN:TCP3000、クライアント側のIN:SSH、OUT:HTTP/HTTPS

# 運用管理用 Serverのセキュリティーグループ
resource "aws_security_group" "opmng_sg" {
  name = "${var.project}-${var.environment}-opmng-sg"
  description = "運用管理用 Serverのセキュリティーグループ"
  vpc_id = aws_vpc.vpc.id #別ファイルだとしても、同一ディレクトリであれば使用可能

  tags = {
    Name = "${var.project}-${var.environment}-opmng-sg"
    Project = var.project
    Env = var.environment
    Type = "public"
  }
}



# 運用管理用 Serverのセキュリティーグループルール(インバウンド_SSH)
resource "aws_security_group_rule" "opmng_in_ssh"{
  security_group_id = aws_security_group.opmng_sg.id
  type = "ingress"
  protocol = "tcp"
  from_port = 22
  to_port = 22
  cidr_blocks = ["0.0.0.0/0"]
}


# 運用管理用 Serverのセキュリティーグループルール(インバウンド_TCP3000)
resource "aws_security_group_rule" "opmng_in_tcp3000"{
  security_group_id = aws_security_group.opmng_sg.id
  type = "ingress"
  protocol = "tcp"
  from_port = 3000
  to_port = 3000
  cidr_blocks = ["0.0.0.0/0"]
}


# 運用管理用 Serverのセキュリティーグループルール(アウトバウンド_HTTP)
resource "aws_security_group_rule" "opmng_out_http"{
  security_group_id = aws_security_group.opmng_sg.id
  type = "egress"
  protocol = "tcp"
  from_port = 80
  to_port = 80
  cidr_blocks = ["0.0.0.0/0"]
}


# 運用管理用 Serverのセキュリティーグループルール(アウトバウンド_HTTPS)
resource "aws_security_group_rule" "opmng_out_https"{
  security_group_id = aws_security_group.opmng_sg.id
  type = "egress"
  protocol = "tcp"
  from_port = 443
  to_port = 443
  cidr_blocks = ["0.0.0.0/0"]
}


#-------------------------------------------------------
# DB(MySQL) Server Security Group
#-------------------------------------------------------
#(補足)TCP3306が入ってくる

# DB Serverのセキュリティーグループ
resource "aws_security_group" "db_sg" {
  name = "${var.project}-${var.environment}-db-sg"
  description = "DB Serverのセキュリティーグループ"
  vpc_id = aws_vpc.vpc.id #別ファイルだとしても、同一ディレクトリであれば使用可能

  tags = {
    Name = "${var.project}-${var.environment}-db-sg"
    Project = var.project
    Env = var.environment
    Type = "public"
  }
}



# DB Serverのセキュリティーグループルール(インバウンド_TCP3306)
resource "aws_security_group_rule" "db_in_tcp3306"{
  security_group_id = aws_security_group.db_sg.id
  type = "ingress"
  protocol = "tcp"
  from_port = 3306
  to_port = 3306
  source_security_group_id = aws_security_group.app_sg.id #TCP3306でAPPServerから入ってくる
}

