# 1. データの要約表示（すでにインポート済みのdfを想定）
df.summary().show()

# 2. 線形回帰で使う変数の抽出
linear_df = df.select(["age", "balance", "campaign"])

# 3. 目的変数（ターゲット）の指定
target = "balance" 

# 4. 説明変数（特徴量）の指定
features = ["age", "campaign"]

# 5. モデルに使う特徴量データの作成
tran_df = df.select(features)

# 6. 特徴量ベクトルの作成（VectorAssembler）
from pyspark.ml.feature import VectorAssembler
#、PySparkのMLlibで機械学習モデルに入力するための「特徴量ベクトル列」を作成する準備
assemble = VectorAssembler(inputCols=features, outputCol="features") 

# (解説)特徴量ベクトルの生成
# VectorAssembler は、複数の列を1つのベクトル列にまとめる。
# MLlibのモデル（例：線形回帰）は features という1列のベクトルを入力とする。

# 線形重回帰モデリングステージ
from pyspark.ml.regression import LinearRegression
# 線形回帰モデルのインスタンスを作成(featureCol="features"は特徴量ベクトルを格納した列、labelCol="balance"は目的変数（預金残高）を表す列。)
clf = LinearRegression(featureCol="features", labelCol="balance")

#上記２つのステージを使ったパイプラインの設定：ステージの登録
from pyspark.ml.
